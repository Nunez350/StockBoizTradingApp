{"ast":null,"code":"import _defineProperty from \"/Users/roynunez/newStockBoizCopy/react-docs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from '../actions/actionTypes';\nconst initialState = {\n  counter: 0\n};\n\nconst stockReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.INCREMENT:\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default stockReducer; // const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case ActionTypes.INCREMENT:\n//           return {\n//               ...state,\n//               counter: state.counter + 1\n//           }\n//         case ActionTypes.INCREMENT_IF_ODD:\n//             return {\n//                 ...state,\n//                 counter: (state.counter % 2 !== 0) ? state.counter + 1 : state.counter\n//             }\n//         case ActionTypes.DECREMENT:\n//             return {\n//                 ...state,\n//                 counter: state.counter - 1\n//             }\n//         default:\n//           return state\n//       }\n// }\n// export default counterReducer;","map":{"version":3,"sources":["/Users/roynunez/newStockBoizCopy/react-docs/src/reducers/stockReducer.js"],"names":["ActionTypes","initialState","counter","stockReducer","state","action","type","INCREMENT"],"mappings":";;;;;;AACA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAsBI,MAAtB,KAAiC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,SAAjB;AACI,+BACOH,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAF7B;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,YAAf,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport * as ActionTypes from '../actions/actionTypes'\nconst initialState = {\n    counter: 0\n};\n\nconst stockReducer = (state = initialState,action) => {\n    switch(action.type){\n        case ActionTypes.INCREMENT:\n            return {\n                ...state,\n                counter: state.counter + 1\n            }\n        default:\n            return state ;\n    }\n}\n\nexport default stockReducer;\n\n\n\n// const counterReducer = (state = initialState, action) => {\n\n//     switch (action.type) {\n//         case ActionTypes.INCREMENT:\n//           return {\n//               ...state,\n//               counter: state.counter + 1\n//           }\n//         case ActionTypes.INCREMENT_IF_ODD:\n//             return {\n//                 ...state,\n//                 counter: (state.counter % 2 !== 0) ? state.counter + 1 : state.counter\n//             }\n         \n//         case ActionTypes.DECREMENT:\n//             return {\n//                 ...state,\n//                 counter: state.counter - 1\n//             }\n        \n//         default:\n//           return state\n//       }\n// }\n// export default counterReducer;\n\n"]},"metadata":{},"sourceType":"module"}