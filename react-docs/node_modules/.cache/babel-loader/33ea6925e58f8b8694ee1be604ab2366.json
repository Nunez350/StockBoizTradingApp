{"ast":null,"code":"var _jsxFileName = \"/Users/roynunez/newStockBoizCopy/react-docs/src/index.js\";\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from 'react-redux'; // import Root from './Components/Root';\n// import todoApp from './reducers';\n//const store = createStore(todoApp)\n\nconst store = createStore(allReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); //import { createStore } from 'redux';\n// import Stocks from 'Components/Stocks'\n// //let store = createStore(reducer);\n// //STORE >globalized state\n// //ACTION\n// const stocksave = () => {\n//     return {\n//         type: 'STOCKSAVE'\n// }\n// //REDUCER\n// const represent = ( state = 0, action) => {\n//     switch(action.type){\n//         case 'STOCKSAVE':\n//                 console.log(this.state.sma);\n//                 console.log(this.state.stockCode);\n//                }\n//             return state;\n//     }\n// }\n// //display it in the console\n// store.subscribe(() => console.log(store.getState()));\n// //DISPATCH\n// store.dipatch(stocksave());","map":{"version":3,"sources":["/Users/roynunez/newStockBoizCopy/react-docs/src/index.js"],"names":["App","React","ReactDOM","serviceWorker","createStore","allReducer","Provider","store","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;AACA;AAGA;;AAEA,MAAMC,KAAK,GAAGH,WAAW,CAACC,UAAD,EACrBG,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EADlB,CAAzB;AAGAP,QAAQ,CAACQ,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAIQI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJR,E,CAOA;AACA;AACA;;AACAT,aAAa,CAACU,UAAd,G,CAEA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from 'react-redux';\n// import Root from './Components/Root';\n// import todoApp from './reducers';\n\n\n//const store = createStore(todoApp)\n\nconst store = createStore(allReducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n        </Provider>, \n        document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n//import { createStore } from 'redux';\n\n// import Stocks from 'Components/Stocks'\n\n// //let store = createStore(reducer);\n\n// //STORE >globalized state\n\n\n// //ACTION\n// const stocksave = () => {\n//     return {\n\n//         type: 'STOCKSAVE'\n     \n// }\n\n\n\n// //REDUCER\n// const represent = ( state = 0, action) => {\n//     switch(action.type){\n//         case 'STOCKSAVE':\n//                 console.log(this.state.sma);\n//                 console.log(this.state.stockCode);\n//                }\n//             return state;\n//     }\n// }\n\n// //display it in the console\n// store.subscribe(() => console.log(store.getState()));\n// //DISPATCH\n\n// store.dipatch(stocksave());\n\n"]},"metadata":{},"sourceType":"module"}